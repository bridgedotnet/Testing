/*!
 * QUnit 2.0.1
 * https://qunitjs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2016-07-23T19:39Z
 */
(function(global){function diff(a,b){for(var j,result=a.slice(),i=0;i<result.length;i++)for(j=0;j<b.length;j++)if(result[i]===b[j]){result.splice(i,1);i--;break}return result}function inArray(elem,array){if(array.indexOf)return array.indexOf(elem);for(var i=0,length=array.length;i<length;i++)if(array[i]===elem)return i;return-1}function objectValues(obj){var key,val,vals=QUnit.is("array",obj)?[]:{};for(key in obj)hasOwn.call(obj,key)&&(val=obj[key],vals[key]=val===Object(val)?objectValues(val):val);return vals}function extend(a,b,undefOnly){for(var prop in b)hasOwn.call(b,prop)&&(b[prop]===undefined?delete a[prop]:undefOnly&&typeof a[prop]!="undefined"||(a[prop]=b[prop]));return a}function objectType(obj){if(typeof obj=="undefined")return"undefined";if(obj===null)return"null";var match=toString.call(obj).match(/^\[object\s(.*)\]$/),type=match&&match[1];switch(type){case"Number":return isNaN(obj)?"nan":"number";case"String":case"Boolean":case"Array":case"Set":case"Map":case"Date":case"RegExp":case"Function":case"Symbol":return type.toLowerCase()}if(typeof obj=="object")return"object"}function is(type,obj){return QUnit.objectType(obj)===type}function extractStacktrace(e,offset){offset=offset===undefined?4:offset;var stack,include,i;if(e.stack){if(stack=e.stack.split("\n"),/^error$/i.test(stack[0])&&stack.shift(),fileName){for(include=[],i=offset;i<stack.length;i++){if(stack[i].indexOf(fileName)!==-1)break;include.push(stack[i])}if(include.length)return include.join("\n")}return stack[offset]}}function sourceFromStacktrace(offset){var error=new Error;if(!error.stack)try{throw error;}catch(err){error=err}return extractStacktrace(error,offset)}function registerLoggingCallbacks(obj){function registerLoggingCallback(key){return function(callback){if(objectType(callback)!=="function")throw new Error("QUnit logging methods require a callback function as their first parameters.");config.callbacks[key].push(callback)}}for(var key,callbackNames=["begin","done","log","testStart","testDone","moduleStart","moduleDone"],i=0,l=callbackNames.length;i<l;i++)key=callbackNames[i],objectType(config.callbacks[key])==="undefined"&&(config.callbacks[key]=[]),obj[key]=registerLoggingCallback(key)}function runLoggingCallbacks(key,args){var i,l,callbacks;for(callbacks=config.callbacks[key],i=0,l=callbacks.length;i<l;i++)callbacks[i](args)}function scheduleBegin(){runStarted=!0;defined.setTimeout?setTimeout(function(){begin()},13):begin()}function begin(){var i,l,modulesLog=[];if(!config.started){for(config.started=now(),config.modules[0].name===""&&config.modules[0].tests.length===0&&config.modules.shift(),i=0,l=config.modules.length;i<l;i++)modulesLog.push({name:config.modules[i].name,tests:config.modules[i].tests});runLoggingCallbacks("begin",{totalTests:Test.count,modules:modulesLog})}config.blocking=!1;process(!0)}function process(last){function next(){process(last)}var start=now();for(config.depth=(config.depth||0)+1;config.queue.length&&!config.blocking;)if(!defined.setTimeout||config.updateRate<=0||now()-start<config.updateRate)config.current&&(config.current.usedAsync=!1),config.queue.shift()();else{setTimeout(next,13);break}config.depth--;!last||config.blocking||config.queue.length||config.depth!==0||done()}function done(){var runtime,passed;autorun=!0;config.previousModule&&runLoggingCallbacks("moduleDone",{name:config.previousModule.name,tests:config.previousModule.tests,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all,runtime:now()-config.moduleStats.started});delete config.previousModule;runtime=now()-config.started;passed=config.stats.all-config.stats.bad;runLoggingCallbacks("done",{failed:config.stats.bad,passed:passed,total:config.stats.all,runtime:runtime})}function setHook(module,hookName){return module.testEnvironment===undefined&&(module.testEnvironment={}),function(callback){module.testEnvironment[hookName]=callback}}function Test(settings){var i,l;for(++Test.count,this.expected=null,extend(this,settings),this.assertions=[],this.semaphore=0,this.usedAsync=!1,this.module=config.currentModule,this.stack=sourceFromStacktrace(3),i=0,l=this.module.tests;i<l.length;i++)this.module.tests[i].name===this.testName&&(this.testName+=" ");this.testId=generateHash(this.module.name,this.testName);this.module.tests.push({name:this.testName,testId:this.testId});settings.skip?(this.callback=function(){},this.async=!1,this.expected=0):this.assert=new Assert(this)}function generateHash(module,testName){for(var hex,i=0,hash=0,str=module+"\x1c"+testName,len=str.length;i<len;i++)hash=(hash<<5)-hash+str.charCodeAt(i)|0;return hex=(4294967296+hash).toString(16),hex.length<8&&(hex="0000000"+hex),hex.slice(-8)}function synchronize(callback,priority,seed){var last=!priority,index;if(QUnit.objectType(callback)==="array"){while(callback.length)synchronize(callback.shift());return}priority?config.queue.splice(priorityCount++,0,callback):seed?(unitSampler||(unitSampler=unitSamplerGenerator(seed)),index=Math.floor(unitSampler()*(config.queue.length-priorityCount+1)),config.queue.splice(priorityCount+index,0,callback)):config.queue.push(callback);autorun&&!config.blocking&&process(last)}function unitSamplerGenerator(seed){var sample=parseInt(generateHash(seed),16)||-1;return function(){return sample^=sample<<13,sample^=sample>>>17,sample^=sample<<5,sample<0&&(sample+=4294967296),sample/4294967296}}function saveGlobal(){if(config.pollution=[],config.noglobals)for(var key in global)if(hasOwn.call(global,key)){if(/^qunit-test-output/.test(key))continue;config.pollution.push(key)}}function checkPollution(){var newGlobals,deletedGlobals,old=config.pollution;saveGlobal();newGlobals=diff(config.pollution,old);newGlobals.length>0&&QUnit.pushFailure("Introduced global variable(s): "+newGlobals.join(", "));deletedGlobals=diff(old,config.pollution);deletedGlobals.length>0&&QUnit.pushFailure("Deleted global variable(s): "+deletedGlobals.join(", "))}function test(testName,callback){if(!focused){var newTest;newTest=new Test({testName:testName,callback:callback});newTest.queue()}}function skip(testName){if(!focused){var test=new Test({testName:testName,skip:!0});test.queue()}}function only(testName,callback){var newTest;focused||(QUnit.config.queue.length=0,focused=!0,newTest=new Test({testName:testName,callback:callback}),newTest.queue())}function internalStop(test){var released=!1;return test.semaphore+=1,config.blocking=!0,config.testTimeout&&defined.setTimeout&&(clearTimeout(config.timeout),config.timeout=setTimeout(function(){QUnit.pushFailure("Test timed out",sourceFromStacktrace(2));internalRecover(test)},config.testTimeout)),function(){released||(released=!0,test.semaphore-=1,internalStart(test))}}function internalRecover(test){test.semaphore=0;internalStart(test)}function internalStart(test){if(isNaN(test.semaphore)){test.semaphore=0;QUnit.pushFailure("Invalid value on test.semaphore",sourceFromStacktrace(2));return}if(!(test.semaphore>0)){if(test.semaphore<0){test.semaphore=0;QUnit.pushFailure("Tried to restart test while already started (test's semaphore was 0 already)",sourceFromStacktrace(2));return}defined.setTimeout?(config.timeout&&clearTimeout(config.timeout),config.timeout=setTimeout(function(){test.semaphore>0||(config.timeout&&clearTimeout(config.timeout),begin())},13)):begin()}}function numberOfTests(module){for(var count=module.tests.length;module=module.childModule;)count+=module.tests.length;return count}function notifyTestsRan(module){for(module.testsRun++;module=module.parentModule;)module.testsRun++}function Assert(testContext){this.test=testContext}function errorString(error){var name,message,resultErrorString=error.toString();return resultErrorString.substring(0,7)==="[object"?(name=error.name?error.name.toString():"Error",message=error.message?error.message.toString():"",name&&message?name+": "+message:name?name:message?message:"Error"):resultErrorString}function applyDeprecated(name){return function(){throw new Error(name+" is removed in QUnit 2.0.\nDetails in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/");}}function resetThrower(){throw new Error("QUnit.reset is removed in QUnit 2.0 without replacement.\nDetails in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/");}var QUnit={},Date=global.Date,now=Date.now||function(){return(new Date).getTime()},setTimeout=global.setTimeout,clearTimeout=global.clearTimeout,window=global.window,defined={document:window&&window.document!==undefined,setTimeout:setTimeout!==undefined,sessionStorage:function(){var x="qunit-test-string";try{return sessionStorage.setItem(x,x),sessionStorage.removeItem(x),!0}catch(e){return!1}}()},fileName=(sourceFromStacktrace(0)||"").replace(/(:\d+)+\)?/,"").replace(/.+\//,""),globalStartCalled=!1,runStarted=!1,autorun=!1,toString=Object.prototype.toString,hasOwn=Object.prototype.hasOwnProperty,config={queue:[],blocking:!0,reorder:!0,altertitle:!0,collapse:!0,scrolltop:!0,maxDepth:5,requireExpects:!1,urlConfig:[],modules:[],moduleStack:[],currentModule:{name:"",tests:[]},callbacks:{}},unitSampler,focused,priorityCount;if(config.modules.push(config.currentModule),function(){if(defined.document){var onErrorFnPrev=window.onerror;window.onerror=function(error,filePath,linerNr){var ret=!1;if(onErrorFnPrev&&(ret=onErrorFnPrev(error,filePath,linerNr)),ret!==!0){if(QUnit.config.current){if(QUnit.config.current.ignoreGlobalErrors)return!0;QUnit.pushFailure(error,filePath+":"+linerNr)}else QUnit.test("global failure",extend(function(){QUnit.pushFailure(error,filePath+":"+linerNr)},{validTest:!0}));return!1}return ret}}}(),QUnit.isLocal=!(defined.document&&window.location.protocol!=="file:"),QUnit.version="2.0.1",extend(QUnit,{module:function(name,testEnvironment,executeNow){function createModule(){var parentModule=config.moduleStack.length?config.moduleStack.slice(-1)[0]:null,moduleName=parentModule!==null?[parentModule.name,name].join(" > "):name,module={name:moduleName,parentModule:parentModule,tests:[],moduleId:generateHash(moduleName),testsRun:0},env={};return parentModule&&(parentModule.childModule=module,extend(env,parentModule.testEnvironment),delete env.beforeEach,delete env.afterEach),extend(env,testEnvironment),module.testEnvironment=env,config.modules.push(module),module}function setCurrentModule(module){config.currentModule=module}var module,moduleFns,currentModule=config.currentModule;arguments.length===2&&objectType(testEnvironment)==="function"&&(executeNow=testEnvironment,testEnvironment=undefined);module=createModule();testEnvironment&&(testEnvironment.setup||testEnvironment.teardown)&&console.warn("Module's `setup` and `teardown` are not hooks anymore on QUnit 2.0, use `beforeEach` and `afterEach` instead\nDetails in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/");moduleFns={before:setHook(module,"before"),beforeEach:setHook(module,"beforeEach"),afterEach:setHook(module,"afterEach"),after:setHook(module,"after")};objectType(executeNow)==="function"&&(config.moduleStack.push(module),setCurrentModule(module),executeNow.call(module.testEnvironment,moduleFns),config.moduleStack.pop(),module=module.parentModule||currentModule);setCurrentModule(module)},test:test,skip:skip,only:only,start:function(count){var globalStartAlreadyCalled=globalStartCalled;if(config.current)throw new Error("QUnit.start cannot be called inside a test context. This feature is removed in QUnit 2.0. For async tests, use QUnit.test() with assert.async() instead.\nDetails in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/");else if(globalStartCalled=!0,runStarted)throw new Error("Called start() while test already started running");else if(globalStartAlreadyCalled||count>1)throw new Error("Called start() outside of a test context too many times");else if(config.autostart)throw new Error("Called start() outside of a test context when QUnit.config.autostart was true");else if(!config.pageLoaded){config.autostart=!0;return}scheduleBegin()},config:config,is:is,objectType:objectType,extend:extend,load:function(){config.pageLoaded=!0;extend(config,{stats:{all:0,bad:0},moduleStats:{all:0,bad:0},started:0,updateRate:1e3,autostart:!0,filter:""},!0);runStarted||(config.blocking=!1,config.autostart&&scheduleBegin())},stack:function(offset){return offset=(offset||0)+2,sourceFromStacktrace(offset)}}),registerLoggingCallbacks(QUnit),focused=!1,priorityCount=0,Test.count=0,Test.prototype={before:function(){this.module===config.previousModule&&hasOwn.call(config,"previousModule")||(hasOwn.call(config,"previousModule")&&runLoggingCallbacks("moduleDone",{name:config.previousModule.name,tests:config.previousModule.tests,failed:config.moduleStats.bad,passed:config.moduleStats.all-config.moduleStats.bad,total:config.moduleStats.all,runtime:now()-config.moduleStats.started}),config.previousModule=this.module,config.moduleStats={all:0,bad:0,started:now()},runLoggingCallbacks("moduleStart",{name:this.module.name,tests:this.module.tests}));config.current=this;this.module.testEnvironment&&(delete this.module.testEnvironment.before,delete this.module.testEnvironment.beforeEach,delete this.module.testEnvironment.afterEach,delete this.module.testEnvironment.after);this.testEnvironment=extend({},this.module.testEnvironment);this.started=now();runLoggingCallbacks("testStart",{name:this.testName,module:this.module.name,testId:this.testId});config.pollution||saveGlobal()},run:function(){function runTest(test){promise=test.callback.call(test.testEnvironment,test.assert);test.resolvePromise(promise)}var promise;if(config.current=this,this.callbackStarted=now(),config.notrycatch){runTest(this);return}try{runTest(this)}catch(e){this.pushFailure("Died on test #"+(this.assertions.length+1)+" "+this.stack+": "+(e.message||e),extractStacktrace(e,0));saveGlobal();config.blocking&&internalRecover(this)}},after:function(){checkPollution()},queueHook:function(hook,hookName,hookOwner){var promise,test=this;return function(){function callHook(){promise=hook.call(test.testEnvironment,test.assert);test.resolvePromise(promise,hookName)}if(hookName==="before"){if(hookOwner.testsRun!==0)return;test.preserveEnvironment=!0}if(hookName!=="after"||hookOwner.testsRun===numberOfTests(hookOwner)-1){if(config.current=test,config.notrycatch){callHook();return}try{callHook()}catch(error){test.pushFailure(hookName+" failed on "+test.testName+": "+(error.message||error),extractStacktrace(error,0))}}}},hooks:function(handler){function processHooks(test,module){module.parentModule&&processHooks(test,module.parentModule);module.testEnvironment&&QUnit.objectType(module.testEnvironment[handler])==="function"&&hooks.push(test.queueHook(module.testEnvironment[handler],handler,module))}var hooks=[];return this.skip||processHooks(this,this.module),hooks},finish:function(){config.current=this;config.requireExpects&&this.expected===null?this.pushFailure("Expected number of assertions to be defined, but expect() was not called.",this.stack):this.expected!==null&&this.expected!==this.assertions.length?this.pushFailure("Expected "+this.expected+" assertions, but "+this.assertions.length+" were run",this.stack):this.expected!==null||this.assertions.length||this.pushFailure("Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.",this.stack);var i,skipped=!!this.skip,bad=0;for(this.runtime=now()-this.started,config.stats.all+=this.assertions.length,config.moduleStats.all+=this.assertions.length,i=0;i<this.assertions.length;i++)this.assertions[i].result||(bad++,config.stats.bad++,config.moduleStats.bad++);notifyTestsRan(this.module);runLoggingCallbacks("testDone",{name:this.testName,module:this.module.name,skipped:skipped,failed:bad,passed:this.assertions.length-bad,total:this.assertions.length,runtime:skipped?0:this.runtime,assertions:this.assertions,testId:this.testId,source:this.stack});config.current=undefined},preserveTestEnvironment:function(){this.preserveEnvironment&&(this.module.testEnvironment=this.testEnvironment,this.testEnvironment=extend({},this.module.testEnvironment))},queue:function(){function run(){synchronize([function(){test.before()},test.hooks("before"),function(){test.preserveTestEnvironment()},test.hooks("beforeEach"),function(){test.run()},test.hooks("afterEach").reverse(),test.hooks("after").reverse(),function(){test.after()},function(){test.finish()}])}var priority,test=this;if(this.valid())return priority=QUnit.config.reorder&&defined.sessionStorage&&+sessionStorage.getItem("qunit-test-"+this.module.name+"-"+this.testName),synchronize(run,priority,config.seed)},pushResult:function(resultInfo){var source,details={module:this.module.name,name:this.testName,result:resultInfo.result,message:resultInfo.message,actual:resultInfo.actual,expected:resultInfo.expected,testId:this.testId,negative:resultInfo.negative||!1,runtime:now()-this.started};resultInfo.result||(source=sourceFromStacktrace(),source&&(details.source=source));runLoggingCallbacks("log",details);this.assertions.push({result:!!resultInfo.result,message:resultInfo.message})},pushFailure:function(message,source,actual){if(!(this instanceof Test))throw new Error("pushFailure() assertion outside test context, was "+sourceFromStacktrace(2));var details={module:this.module.name,name:this.testName,result:!1,message:message||"error",actual:actual||null,testId:this.testId,runtime:now()-this.started};source&&(details.source=source);runLoggingCallbacks("log",details);this.assertions.push({result:!1,message:message})},resolvePromise:function(promise,phase){var then,resume,message,test=this;promise!=null&&(then=promise.then,QUnit.objectType(then)==="function"&&(resume=internalStop(test),then.call(promise,function(){resume()},function(error){message="Promise rejected "+(phase?phase.replace(/Each$/,""):"during")+" "+test.testName+": "+(error.message||error);test.pushFailure(message,extractStacktrace(error,0));saveGlobal();resume()})))},valid:function(){function moduleChainNameMatch(testModule){var testModuleName=testModule.name?testModule.name.toLowerCase():null;return testModuleName===module?!0:testModule.parentModule?moduleChainNameMatch(testModule.parentModule):!1}function moduleChainIdMatch(testModule){return inArray(testModule.moduleId,config.moduleId)>-1||testModule.parentModule&&moduleChainIdMatch(testModule.parentModule)}var filter=config.filter,regexFilter=/^(!?)\/([\w\W]*)\/(i?$)/.exec(filter),module=config.module&&config.module.toLowerCase(),fullName=this.module.name+": "+this.testName;return this.callback&&this.callback.validTest?!0:config.moduleId&&config.moduleId.length>0&&!moduleChainIdMatch(this.module)?!1:config.testId&&config.testId.length>0&&inArray(this.testId,config.testId)<0?!1:module&&!moduleChainNameMatch(this.module)?!1:filter?regexFilter?this.regexFilter(!!regexFilter[1],regexFilter[2],regexFilter[3],fullName):this.stringFilter(filter,fullName):!0},regexFilter:function(exclude,pattern,flags,fullName){var regex=new RegExp(pattern,flags),match=regex.test(fullName);return match!==exclude},stringFilter:function(filter,fullName){filter=filter.toLowerCase();fullName=fullName.toLowerCase();var include=filter.charAt(0)!=="!";return(include||(filter=filter.slice(1)),fullName.indexOf(filter)!==-1)?include:!include}},QUnit.pushFailure=function(){if(!QUnit.config.current)throw new Error("pushFailure() assertion outside test context, in "+sourceFromStacktrace(2));var currentTest=QUnit.config.current;return currentTest.pushFailure.apply(currentTest,arguments)},QUnit.assert=Assert.prototype={expect:function(asserts){if(arguments.length===1)this.test.expected=asserts;else return this.test.expected},async:function(count){var resume,test=this.test,popped=!1,acceptCallCount=count;return typeof acceptCallCount=="undefined"&&(acceptCallCount=1),test.usedAsync=!0,resume=internalStop(test),function(){if(popped){test.pushFailure("Too many calls to the `assert.async` callback",sourceFromStacktrace(2));return}(acceptCallCount-=1,acceptCallCount>0)||(popped=!0,resume())}},push:function(result,actual,expected,message,negative){var currentAssert=this instanceof Assert?this:QUnit.config.current.assert;return currentAssert.pushResult({result:result,actual:actual,expected:expected,message:message,negative:negative})},pushResult:function(resultInfo){var assert=this,currentTest=assert instanceof Assert&&assert.test||QUnit.config.current;if(!currentTest)throw new Error("assertion outside test context, in "+sourceFromStacktrace(2));return currentTest.usedAsync===!0&&currentTest.semaphore===0&&currentTest.pushFailure("Assertion after the final `assert.async` was resolved",sourceFromStacktrace(2)),assert instanceof Assert||(assert=currentTest.assert),assert.test.pushResult(resultInfo)},ok:function(result,message){message=message||(result?"okay":"failed, expected argument to be truthy, was: "+QUnit.dump.parse(result));this.pushResult({result:!!result,actual:result,expected:!0,message:message})},notOk:function(result,message){message=message||(result?"failed, expected argument to be falsy, was: "+QUnit.dump.parse(result):"okay");this.pushResult({result:!result,actual:result,expected:!1,message:message})},equal:function(actual,expected,message){this.pushResult({result:expected==actual,actual:actual,expected:expected,message:message})},notEqual:function(actual,expected,message){this.pushResult({result:expected!=actual,actual:actual,expected:expected,message:message,negative:!0})},propEqual:function(actual,expected,message){actual=objectValues(actual);expected=objectValues(expected);this.pushResult({result:QUnit.equiv(actual,expected),actual:actual,expected:expected,message:message})},notPropEqual:function(actual,expected,message){actual=objectValues(actual);expected=objectValues(expected);this.pushResult({result:!QUnit.equiv(actual,expected),actual:actual,expected:expected,message:message,negative:!0})},deepEqual:function(actual,expected,message){this.pushResult({result:QUnit.equiv(actual,expected),actual:actual,expected:expected,message:message})},notDeepEqual:function(actual,expected,message){this.pushResult({result:!QUnit.equiv(actual,expected),actual:actual,expected:expected,message:message,negative:!0})},strictEqual:function(actual,expected,message){this.pushResult({result:expected===actual,actual:actual,expected:expected,message:message})},notStrictEqual:function(actual,expected,message){this.pushResult({result:expected!==actual,actual:actual,expected:expected,message:message,negative:!0})},throws:function(block,expected,message){var actual,expectedType,expectedOutput=expected,ok=!1,currentTest=this instanceof Assert&&this.test||QUnit.config.current;if(QUnit.objectType(expected)==="string")if(message==null)message=expected,expected=null;else throw new Error("throws/raises does not accept a string value for the expected argument.\nUse a non-string object value (e.g. regExp) instead if it's necessary.Details in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/");currentTest.ignoreGlobalErrors=!0;try{block.call(currentTest.testEnvironment)}catch(e){actual=e}currentTest.ignoreGlobalErrors=!1;actual&&(expectedType=QUnit.objectType(expected),expected?expectedType==="regexp"?ok=expected.test(errorString(actual)):expectedType==="function"&&actual instanceof expected?ok=!0:expectedType==="object"?ok=actual instanceof expected.constructor&&actual.name===expected.name&&actual.message===expected.message:expectedType==="function"&&expected.call({},actual)===!0&&(expectedOutput=null,ok=!0):(ok=!0,expectedOutput=null));currentTest.assert.pushResult({result:ok,actual:actual,expected:expectedOutput,message:message})}},function(){Assert.prototype.raises=Assert.prototype.throws}(),QUnit.equiv=function(){function useStrictEquality(b,a){return typeof a=="object"&&(a=a.valueOf()),typeof b=="object"&&(b=b.valueOf()),a===b}function compareConstructors(a,b){var protoA=getProto(a),protoB=getProto(b);return a.constructor===b.constructor?!0:(protoA&&protoA.constructor===null&&(protoA=null),protoB&&protoB.constructor===null&&(protoB=null),protoA===null&&protoB===Object.prototype||protoB===null&&protoA===Object.prototype)?!0:!1}function getRegExpFlags(regexp){return"flags"in regexp?regexp.flags:regexp.toString().match(/[gimuy]*$/)[0]}function typeEquiv(a,b){var type=QUnit.objectType(a);return QUnit.objectType(b)===type&&callbacks[type](b,a)}function innerEquiv(a,b){return arguments.length<2?!0:(a===b||typeEquiv(a,b))&&(arguments.length===2||innerEquiv.apply(this,[].slice.call(arguments,1)))}var callers=[],parents=[],parentsB=[],getProto=Object.getPrototypeOf||function(obj){return obj.__proto__},callbacks={string:useStrictEquality,boolean:useStrictEquality,number:useStrictEquality,"null":useStrictEquality,undefined:useStrictEquality,symbol:useStrictEquality,date:useStrictEquality,nan:function(){return!0},regexp:function(b,a){return a.source===b.source&&getRegExpFlags(a)===getRegExpFlags(b)},"function":function(){var caller=callers[callers.length-1];return caller!==Object&&typeof caller!="undefined"},array:function(b,a){var i,j,len,loop,aCircular,bCircular;if(len=a.length,len!==b.length)return!1;for(parents.push(a),parentsB.push(b),i=0;i<len;i++){for(loop=!1,j=0;j<parents.length;j++)if(aCircular=parents[j]===a[i],bCircular=parentsB[j]===b[i],aCircular||bCircular)if(a[i]===b[i]||aCircular&&bCircular)loop=!0;else return parents.pop(),parentsB.pop(),!1;if(!loop&&!innerEquiv(a[i],b[i]))return parents.pop(),parentsB.pop(),!1}return parents.pop(),parentsB.pop(),!0},set:function(b,a){var innerEq,outerEq=!0;return a.size!==b.size?!1:(a.forEach(function(aVal){innerEq=!1;b.forEach(function(bVal){innerEquiv(bVal,aVal)&&(innerEq=!0)});innerEq||(outerEq=!1)}),outerEq)},map:function(b,a){var innerEq,outerEq=!0;return a.size!==b.size?!1:(a.forEach(function(aVal,aKey){innerEq=!1;b.forEach(function(bVal,bKey){innerEquiv([bVal,bKey],[aVal,aKey])&&(innerEq=!0)});innerEq||(outerEq=!1)}),outerEq)},object:function(b,a){var i,j,loop,aCircular,bCircular,eq=!0,aProperties=[],bProperties=[];if(compareConstructors(a,b)===!1)return!1;callers.push(a.constructor);parents.push(a);parentsB.push(b);for(i in a){for(loop=!1,j=0;j<parents.length;j++)if(aCircular=parents[j]===a[i],bCircular=parentsB[j]===b[i],aCircular||bCircular)if(a[i]===b[i]||aCircular&&bCircular)loop=!0;else{eq=!1;break}if(aProperties.push(i),!loop&&!innerEquiv(a[i],b[i])){eq=!1;break}}parents.pop();parentsB.pop();callers.pop();for(i in b)bProperties.push(i);return eq&&innerEquiv(aProperties.sort(),bProperties.sort())}};return innerEquiv}(),QUnit.dump=function(){function quote(str){return'"'+str.toString().replace(/\\/g,"\\\\").replace(/"/g,'\\"')+'"'}function literal(o){return o+""}function join(pre,arr,post){var s=dump.separator(),base=dump.indent(),inner=dump.indent(1);return(arr.join&&(arr=arr.join(","+s+inner)),!arr)?pre+post:[pre,inner+arr,base+post].join(s)}function array(arr,stack){var i=arr.length,ret=new Array(i);if(dump.maxDepth&&dump.depth>dump.maxDepth)return"[object Array]";for(this.up();i--;)ret[i]=this.parse(arr[i],undefined,stack);return this.down(),join("[",ret,"]")}function isArray(obj){return toString.call(obj)==="[object Array]"||typeof obj.length=="number"&&obj.item!==undefined&&(obj.length?obj.item(0)===obj[0]:obj.item(0)===null&&obj[0]===undefined)}var reName=/^function (\w+)/,dump={parse:function(obj,objType,stack){stack=stack||[];var res,parser,parserType,inStack=inArray(obj,stack);return inStack!==-1?"recursion("+(inStack-stack.length)+")":(objType=objType||this.typeOf(obj),parser=this.parsers[objType],parserType=typeof parser,parserType==="function")?(stack.push(obj),res=parser.call(this,obj,stack),stack.pop(),res):parserType==="string"?parser:this.parsers.error},typeOf:function(obj){return obj===null?"null":typeof obj=="undefined"?"undefined":QUnit.is("regexp",obj)?"regexp":QUnit.is("date",obj)?"date":QUnit.is("function",obj)?"function":obj.setInterval!==undefined&&obj.document!==undefined&&obj.nodeType===undefined?"window":obj.nodeType===9?"document":obj.nodeType?"node":isArray(obj)?"array":obj.constructor===Error.prototype.constructor?"error":typeof obj},separator:function(){return this.multiline?this.HTML?"<br />":"\n":this.HTML?"&#160;":" "},indent:function(extra){if(!this.multiline)return"";var chr=this.indentChar;return this.HTML&&(chr=chr.replace(/\t/g,"   ").replace(/ /g,"&#160;")),new Array(this.depth+(extra||0)).join(chr)},up:function(a){this.depth+=a||1},down:function(a){this.depth-=a||1},setParser:function(name,parser){this.parsers[name]=parser},quote:quote,literal:literal,join:join,depth:1,maxDepth:QUnit.config.maxDepth,parsers:{window:"[Window]",document:"[Document]",error:function(error){return'Error("'+error.message+'")'},unknown:"[Unknown]","null":"null",undefined:"undefined","function":function(fn){var ret="function",name="name"in fn?fn.name:(reName.exec(fn)||[])[1];return name&&(ret+=" "+name),ret+="(",ret=[ret,dump.parse(fn,"functionArgs"),"){"].join(""),join(ret,dump.parse(fn,"functionCode"),"}")},array:array,nodelist:array,arguments:array,object:function(map,stack){var keys,key,val,i,nonEnumerableProperties,ret=[];if(dump.maxDepth&&dump.depth>dump.maxDepth)return"[object Object]";dump.up();keys=[];for(key in map)keys.push(key);nonEnumerableProperties=["message","name"];for(i in nonEnumerableProperties)key=nonEnumerableProperties[i],key in map&&inArray(key,keys)<0&&keys.push(key);for(keys.sort(),i=0;i<keys.length;i++)key=keys[i],val=map[key],ret.push(dump.parse(key,"key")+": "+dump.parse(val,undefined,stack));return dump.down(),join("{",ret,"}")},node:function(node){var len,i,val,open=dump.HTML?"&lt;":"<",close=dump.HTML?"&gt;":">",tag=node.nodeName.toLowerCase(),ret=open+tag,attrs=node.attributes;if(attrs)for(i=0,len=attrs.length;i<len;i++)val=attrs[i].nodeValue,val&&val!=="inherit"&&(ret+=" "+attrs[i].nodeName+"="+dump.parse(val,"attribute"));return ret+=close,(node.nodeType===3||node.nodeType===4)&&(ret+=node.nodeValue),ret+open+"/"+tag+close},functionArgs:function(fn){var args,l=fn.length;if(!l)return"";for(args=new Array(l);l--;)args[l]=String.fromCharCode(97+l);return" "+args.join(", ")+" "},key:quote,functionCode:"[code]",attribute:quote,string:quote,date:quote,regexp:literal,number:literal,boolean:literal,symbol:function(sym){return sym.toString()}},HTML:!1,indentChar:"  ",multiline:!0};return dump}(),QUnit.jsDump=QUnit.dump,Object.keys(Assert.prototype).forEach(function(key){QUnit[key]=applyDeprecated("`QUnit."+key+"`")}),QUnit.asyncTest=function(){throw new Error("asyncTest is removed in QUnit 2.0, use QUnit.test() with assert.async() instead.\nDetails in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/");},QUnit.stop=function(){throw new Error("QUnit.stop is removed in QUnit 2.0, use QUnit.test() with assert.async() instead.\nDetails in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/");},Object.defineProperty(QUnit,"reset",{get:function(){return resetThrower},set:resetThrower}),defined.document){if(window.QUnit)throw new Error("QUnit has already been defined.");["test","module","expect","start","ok","notOk","equal","notEqual","propEqual","notPropEqual","deepEqual","notDeepEqual","strictEqual","notStrictEqual","throws","raises"].forEach(function(key){window[key]=applyDeprecated("The global `"+key+"`")});window.QUnit=QUnit}typeof module!="undefined"&&module&&module.exports&&(module.exports=QUnit,module.exports.QUnit=QUnit);typeof exports!="undefined"&&exports&&(exports.QUnit=QUnit);typeof define=="function"&&define.amd&&(define(function(){return QUnit}),QUnit.config.autostart=!1)})(function(){return this}()),function(){function storeFixture(){if(!hasOwn.call(config,"fixture")){var fixture=document.getElementById("qunit-fixture");fixture&&(config.fixture=fixture.innerHTML)}}function resetFixture(){if(config.fixture!=null){var fixture=document.getElementById("qunit-fixture");fixture&&(fixture.innerHTML=config.fixture)}}if(typeof window!="undefined"&&window.document){var config=QUnit.config,hasOwn=Object.prototype.hasOwnProperty;QUnit.begin(storeFixture);QUnit.testStart(resetFixture)}}(),function(){function getUrlParams(){for(var param,name,value,urlParams={},params=location.search.slice(1).split("&"),length=params.length,i=0;i<length;i++)params[i]&&(param=params[i].split("="),name=decodeQueryParam(param[0]),value=param.length===1||decodeQueryParam(param.slice(1).join("=")),urlParams[name]=urlParams[name]?[].concat(urlParams[name],value):value);return urlParams}function decodeQueryParam(param){return decodeURIComponent(param.replace(/\+/g,"%20"))}function escapeText(s){return s?(s=s+"",s.replace(/['"<>&]/g,function(s){switch(s){case"'":return"&#039;";case'"':return"&quot;";case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;"}})):""}function addEvent(elem,type,fn){elem.addEventListener(type,fn,!1)}function removeEvent(elem,type,fn){elem.removeEventListener(type,fn,!1)}function addEvents(elems,type,fn){for(var i=elems.length;i--;)addEvent(elems[i],type,fn)}function hasClass(elem,name){return(" "+elem.className+" ").indexOf(" "+name+" ")>=0}function addClass(elem,name){hasClass(elem,name)||(elem.className+=(elem.className?" ":"")+name)}function toggleClass(elem,name,force){force||typeof force=="undefined"&&!hasClass(elem,name)?addClass(elem,name):removeClass(elem,name)}function removeClass(elem,name){for(var set=" "+elem.className+" ";set.indexOf(" "+name+" ")>=0;)set=set.replace(" "+name+" "," ");elem.className=typeof set.trim=="function"?set.trim():set.replace(/^\s+|\s+$/g,"")}function id(name){return document.getElementById&&document.getElementById(name)}function interceptNavigation(ev){return applyUrlParams(),ev&&ev.preventDefault&&ev.preventDefault(),!1}function getUrlConfigHtml(){for(var j,val,escaped,escapedTooltip,selection=!1,urlConfig=config.urlConfig,urlConfigHtml="",i=0;i<urlConfig.length;i++)if(val=config.urlConfig[i],typeof val=="string"&&(val={id:val,label:val}),escaped=escapeText(val.id),escapedTooltip=escapeText(val.tooltip),val.value&&typeof val.value!="string"){if(urlConfigHtml+="<label for='qunit-urlconfig-"+escaped+"' title='"+escapedTooltip+"'>"+val.label+": <\/label><select id='qunit-urlconfig-"+escaped+"' name='"+escaped+"' title='"+escapedTooltip+"'><option><\/option>",QUnit.is("array",val.value))for(j=0;j<val.value.length;j++)escaped=escapeText(val.value[j]),urlConfigHtml+="<option value='"+escaped+"'"+(config[val.id]===val.value[j]?(selection=!0)&&" selected='selected'":"")+">"+escaped+"<\/option>";else for(j in val.value)hasOwn.call(val.value,j)&&(urlConfigHtml+="<option value='"+escapeText(j)+"'"+(config[val.id]===j?(selection=!0)&&" selected='selected'":"")+">"+escapeText(val.value[j])+"<\/option>");config[val.id]&&!selection&&(escaped=escapeText(config[val.id]),urlConfigHtml+="<option value='"+escaped+"' selected='selected' disabled='disabled'>"+escaped+"<\/option>");urlConfigHtml+="<\/select>"}else urlConfigHtml+="<label for='qunit-urlconfig-"+escaped+"' title='"+escapedTooltip+"'><input id='qunit-urlconfig-"+escaped+"' name='"+escaped+"' type='checkbox'"+(val.value?" value='"+escapeText(val.value)+"'":"")+(config[val.id]?" checked='checked'":"")+" title='"+escapedTooltip+"' />"+escapeText(val.label)+"<\/label>";return urlConfigHtml}function toolbarChanged(){var updatedUrl,value,tests,field=this,params={};value="selectedIndex"in field?field.options[field.selectedIndex].value||undefined:field.checked?field.defaultValue||!0:undefined;params[field.name]=value;updatedUrl=setUrl(params);"hidepassed"===field.name&&"replaceState"in window.history?(QUnit.urlParams[field.name]=value,config[field.name]=value||!1,tests=id("qunit-tests"),tests&&toggleClass(tests,"hidepass",value||!1),window.history.replaceState(null,"",updatedUrl)):window.location=updatedUrl}function setUrl(params){var key,arrValue,i,querystring="?",location=window.location;params=QUnit.extend(QUnit.extend({},QUnit.urlParams),params);for(key in params)if(hasOwn.call(params,key)&&params[key]!==undefined)for(arrValue=[].concat(params[key]),i=0;i<arrValue.length;i++)querystring+=encodeURIComponent(key),arrValue[i]!==!0&&(querystring+="="+encodeURIComponent(arrValue[i])),querystring+="&";return location.protocol+"//"+location.host+location.pathname+querystring.slice(0,-1)}function applyUrlParams(){for(var selectedModules=[],modulesList=id("qunit-modulefilter-dropdown-list").getElementsByTagName("input"),filter=id("qunit-filter-input").value,i=0;i<modulesList.length;i++)modulesList[i].checked&&selectedModules.push(modulesList[i].value);window.location=setUrl({filter:filter===""?undefined:filter,moduleId:selectedModules.length===0?undefined:selectedModules,module:undefined,testId:undefined})}function toolbarUrlConfigContainer(){var urlConfigContainer=document.createElement("span");return urlConfigContainer.innerHTML=getUrlConfigHtml(),addClass(urlConfigContainer,"qunit-url-config"),addEvents(urlConfigContainer.getElementsByTagName("input"),"change",toolbarChanged),addEvents(urlConfigContainer.getElementsByTagName("select"),"change",toolbarChanged),urlConfigContainer}function toolbarLooseFilter(){var filter=document.createElement("form"),label=document.createElement("label"),input=document.createElement("input"),button=document.createElement("button");return addClass(filter,"qunit-filter"),label.innerHTML="Filter: ",input.type="text",input.value=config.filter||"",input.name="filter",input.id="qunit-filter-input",button.innerHTML="Go",label.appendChild(input),filter.appendChild(label),filter.appendChild(document.createTextNode(" ")),filter.appendChild(button),addEvent(filter,"submit",interceptNavigation),filter}function moduleListHtml(){for(var checked,html="",i=0;i<config.modules.length;i++)config.modules[i].name!==""&&(checked=config.moduleId.indexOf(config.modules[i].moduleId)>-1,html+="<li><label class='clickable"+(checked?" checked":"")+"'><input type='checkbox' value='"+config.modules[i].moduleId+"'"+(checked?" checked='checked'":"")+" />"+escapeText(config.modules[i].name)+"<\/label><\/li>");return html}function toolbarModuleFilter(){function searchFocus(){function hideHandler(e){var inContainer=moduleFilter.contains(e.target);e.keyCode!==27&&inContainer||(e.keyCode===27&&inContainer&&moduleSearch.focus(),dropDown.style.display="none",removeEvent(document,"click",hideHandler),removeEvent(document,"keydown",hideHandler),moduleSearch.value="",searchInput())}dropDown.style.display==="none"&&(dropDown.style.display="block",addEvent(document,"click",hideHandler),addEvent(document,"keydown",hideHandler))}function searchInput(){for(var item,searchText=moduleSearch.value.toLowerCase(),listItems=dropDownList.children,i=0;i<listItems.length;i++)item=listItems[i],item.style.display=!searchText||item.textContent.toLowerCase().indexOf(searchText)>-1?"":"none"}function selectionChange(evt){var i,item,checkbox=evt&&evt.target||allCheckbox,modulesList=dropDownList.getElementsByTagName("input"),selectedNames=[];for(toggleClass(checkbox.parentNode,"checked",checkbox.checked),dirty=!1,checkbox.checked&&checkbox!==allCheckbox&&(allCheckbox.checked=!1,removeClass(allCheckbox.parentNode,"checked")),i=0;i<modulesList.length;i++)item=modulesList[i],evt?checkbox===allCheckbox&&checkbox.checked&&(item.checked=!1,removeClass(item.parentNode,"checked")):toggleClass(item.parentNode,"checked",item.checked),dirty=dirty||item.checked!==item.defaultChecked,item.checked&&selectedNames.push(item.parentNode.textContent);commit.style.display=reset.style.display=dirty?"":"none";moduleSearch.placeholder=selectedNames.join(", ")||allCheckbox.parentNode.textContent;moduleSearch.title="Type to filter list. Current selection:\n"+(selectedNames.join("\n")||allCheckbox.parentNode.textContent)}var allCheckbox,commit,reset,moduleFilter=document.createElement("form"),label=document.createElement("label"),moduleSearch=document.createElement("input"),dropDown=document.createElement("div"),actions=document.createElement("span"),dropDownList=document.createElement("ul"),dirty=!1;return moduleSearch.id="qunit-modulefilter-search",addEvent(moduleSearch,"input",searchInput),addEvent(moduleSearch,"input",searchFocus),addEvent(moduleSearch,"focus",searchFocus),addEvent(moduleSearch,"click",searchFocus),label.id="qunit-modulefilter-search-container",label.innerHTML="Module: ",label.appendChild(moduleSearch),actions.id="qunit-modulefilter-actions",actions.innerHTML="<button style='display:none'>Apply<\/button><button type='reset' style='display:none'>Reset<\/button><label class='clickable"+(config.moduleId.length?"":" checked")+"'><input type='checkbox'"+(config.moduleId.length?"":" checked='checked'")+">All modules<\/label>",allCheckbox=actions.lastChild.firstChild,commit=actions.firstChild,reset=commit.nextSibling,addEvent(commit,"click",applyUrlParams),dropDownList.id="qunit-modulefilter-dropdown-list",dropDownList.innerHTML=moduleListHtml(),dropDown.id="qunit-modulefilter-dropdown",dropDown.style.display="none",dropDown.appendChild(actions),dropDown.appendChild(dropDownList),addEvent(dropDown,"change",selectionChange),selectionChange(),moduleFilter.id="qunit-modulefilter",moduleFilter.appendChild(label),moduleFilter.appendChild(dropDown),addEvent(moduleFilter,"submit",interceptNavigation),addEvent(moduleFilter,"reset",function(){window.setTimeout(selectionChange)}),moduleFilter}function appendToolbar(){var toolbar=id("qunit-testrunner-toolbar");toolbar&&(toolbar.appendChild(toolbarUrlConfigContainer()),toolbar.appendChild(toolbarModuleFilter()),toolbar.appendChild(toolbarLooseFilter()),toolbar.appendChild(document.createElement("div")).className="clearfix")}function appendHeader(){var header=id("qunit-header");header&&(header.innerHTML="<a href='"+escapeText(unfilteredUrl)+"'>"+header.innerHTML+"<\/a> ")}function appendBanner(){var banner=id("qunit-banner");banner&&(banner.className="")}function appendTestResults(){var tests=id("qunit-tests"),result=id("qunit-testresult");result&&result.parentNode.removeChild(result);tests&&(tests.innerHTML="",result=document.createElement("p"),result.id="qunit-testresult",result.className="result",tests.parentNode.insertBefore(result,tests),result.innerHTML="Running...<br />&#160;")}function appendFilteredTest(){var testId=QUnit.config.testId;return!testId||testId.length<=0?"":"<div id='qunit-filteredTest'>Rerunning selected tests: "+escapeText(testId.join(", "))+" <a id='qunit-clearFilter' href='"+escapeText(unfilteredUrl)+"'>Run all tests<\/a><\/div>"}function appendUserAgent(){var userAgent=id("qunit-userAgent");userAgent&&(userAgent.innerHTML="",userAgent.appendChild(document.createTextNode("QUnit "+QUnit.version+"; "+navigator.userAgent)))}function appendInterface(){var qunit=id("qunit");qunit&&(qunit.innerHTML="<h1 id='qunit-header'>"+escapeText(document.title)+"<\/h1><h2 id='qunit-banner'><\/h2><div id='qunit-testrunner-toolbar'><\/div>"+appendFilteredTest()+"<h2 id='qunit-userAgent'><\/h2><ol id='qunit-tests'><\/ol>");appendHeader();appendBanner();appendTestResults();appendUserAgent();appendToolbar()}function appendTestsList(modules){for(var x,z,test,moduleObj,i=0,l=modules.length;i<l;i++)for(moduleObj=modules[i],x=0,z=moduleObj.tests.length;x<z;x++)test=moduleObj.tests[x],appendTest(test.name,test.testId,moduleObj.name)}function appendTest(name,testId,moduleName){var title,rerunTrigger,testBlock,assertList,tests=id("qunit-tests");tests&&(title=document.createElement("strong"),title.innerHTML=getNameHtml(name,moduleName),rerunTrigger=document.createElement("a"),rerunTrigger.innerHTML="Rerun",rerunTrigger.href=setUrl({testId:testId}),testBlock=document.createElement("li"),testBlock.appendChild(title),testBlock.appendChild(rerunTrigger),testBlock.id="qunit-test-output-"+testId,assertList=document.createElement("ol"),assertList.className="qunit-assert-list",testBlock.appendChild(assertList),tests.appendChild(testBlock))}function getNameHtml(name,module){var nameHtml="";return module&&(nameHtml="<span class='module-name'>"+escapeText(module)+"<\/span>: "),nameHtml+("<span class='test-name'>"+escapeText(name)+"<\/span>")}function stripHtml(string){return string.replace(/<\/?[^>]+(>|$)/g,"").replace(/\&quot;/g,"").replace(/\s+/g,"")}var location=typeof window!="undefined"&&window.location,urlParams,notPhantom;if(location&&(urlParams=getUrlParams(),QUnit.urlParams=urlParams,QUnit.config.moduleId=[].concat(urlParams.moduleId||[]),QUnit.config.testId=[].concat(urlParams.testId||[]),QUnit.config.module=urlParams.module,QUnit.config.filter=urlParams.filter,urlParams.seed===!0?QUnit.config.seed=Math.random().toString(36).slice(2):urlParams.seed&&(QUnit.config.seed=urlParams.seed),QUnit.config.urlConfig.push({id:"hidepassed",label:"Hide passed tests",tooltip:"Only show tests and assertions that fail. Stored as query-strings."},{id:"noglobals",label:"Check for Globals",tooltip:"Enabling this will test if any test introduces new properties on the global object (`window` in Browsers). Stored as query-strings."},{id:"notrycatch",label:"No try-catch",tooltip:"Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings."}),QUnit.begin(function(){for(var option,urlConfig=QUnit.config.urlConfig,i=0;i<urlConfig.length;i++)option=QUnit.config.urlConfig[i],typeof option!="string"&&(option=option.id),QUnit.config[option]===undefined&&(QUnit.config[option]=urlParams[option])}),typeof window!="undefined"&&window.document)){QUnit.init=function(){throw new Error("QUnit.init is removed in QUnit 2.0, use QUnit.test() with assert.async() instead.\nDetails in our upgrade guide at https://qunitjs.com/upgrade-guide-2.x/");};var config=QUnit.config,document=window.document,collapseNext=!1,hasOwn=Object.prototype.hasOwnProperty,unfilteredUrl=setUrl({filter:undefined,module:undefined,moduleId:undefined,testId:undefined}),defined={sessionStorage:function(){var x="qunit-test-string";try{return sessionStorage.setItem(x,x),sessionStorage.removeItem(x),!0}catch(e){return!1}}()},modulesList=[];QUnit.begin(function(details){for(var moduleObj,tests,i=0;i<details.modules.length;i++)moduleObj=details.modules[i],moduleObj.name&&modulesList.push(moduleObj.name);modulesList.sort(function(a,b){return a.localeCompare(b)});appendInterface();appendTestsList(details.modules);tests=id("qunit-tests");tests&&config.hidepassed&&addClass(tests,"hidepass")});QUnit.done(function(details){var i,key,banner=id("qunit-banner"),tests=id("qunit-tests"),html=["Tests completed in ",details.runtime," milliseconds.<br />","<span class='passed'>",details.passed,"<\/span> assertions of <span class='total'>",details.total,"<\/span> passed, <span class='failed'>",details.failed,"<\/span> failed."].join("");if(banner&&(banner.className=details.failed?"qunit-fail":"qunit-pass"),tests&&(id("qunit-testresult").innerHTML=html),config.altertitle&&document.title&&(document.title=[details.failed?"✖":"✔",document.title.replace(/^[\u2714\u2716] /i,"")].join(" ")),config.reorder&&defined.sessionStorage&&details.failed===0)for(i=0;i<sessionStorage.length;i++)key=sessionStorage.key(i++),key.indexOf("qunit-test-")===0&&sessionStorage.removeItem(key);config.scrolltop&&window.scrollTo&&window.scrollTo(0,0)});QUnit.testStart(function(details){var running,testBlock,bad;testBlock=id("qunit-test-output-"+details.testId);testBlock?testBlock.className="running":appendTest(details.name,details.testId,details.module);running=id("qunit-testresult");running&&(bad=QUnit.config.reorder&&defined.sessionStorage&&+sessionStorage.getItem("qunit-test-"+details.module+"-"+details.name),running.innerHTML=(bad?"Rerunning previously failed test: <br />":"Running: <br />")+getNameHtml(details.name,details.module))});QUnit.log(function(details){var assertList,assertLi,message,expected,actual,diff,showDiff=!1,testItem=id("qunit-test-output-"+details.testId);testItem&&(message=escapeText(details.message)||(details.result?"okay":"failed"),message="<span class='test-message'>"+message+"<\/span>",message+="<span class='runtime'>@ "+details.runtime+" ms<\/span>",!details.result&&hasOwn.call(details,"expected")?(expected=details.negative?"NOT "+QUnit.dump.parse(details.expected):QUnit.dump.parse(details.expected),actual=QUnit.dump.parse(details.actual),message+="<table><tr class='test-expected'><th>Expected: <\/th><td><pre>"+escapeText(expected)+"<\/pre><\/td><\/tr>",actual!==expected?(message+="<tr class='test-actual'><th>Result: <\/th><td><pre>"+escapeText(actual)+"<\/pre><\/td><\/tr>",/^(true|false)$/.test(actual)||/^(true|false)$/.test(expected)||(diff=QUnit.diff(expected,actual),showDiff=stripHtml(diff).length!==stripHtml(expected).length+stripHtml(actual).length),showDiff&&(message+="<tr class='test-diff'><th>Diff: <\/th><td><pre>"+diff+"<\/pre><\/td><\/tr>")):message+=expected.indexOf("[object Array]")!==-1||expected.indexOf("[object Object]")!==-1?"<tr class='test-message'><th>Message: <\/th><td>Diff suppressed as the depth of object is more than current max depth ("+QUnit.config.maxDepth+").<p>Hint: Use <code>QUnit.dump.maxDepth<\/code> to  run with a higher max depth or <a href='"+escapeText(setUrl({maxDepth:-1}))+"'>Rerun<\/a> without max depth.<\/p><\/td><\/tr>":"<tr class='test-message'><th>Message: <\/th><td>Diff suppressed as the expected and actual results have an equivalent serialization<\/td><\/tr>",details.source&&(message+="<tr class='test-source'><th>Source: <\/th><td><pre>"+escapeText(details.source)+"<\/pre><\/td><\/tr>"),message+="<\/table>"):!details.result&&details.source&&(message+="<table><tr class='test-source'><th>Source: <\/th><td><pre>"+escapeText(details.source)+"<\/pre><\/td><\/tr><\/table>"),assertList=testItem.getElementsByTagName("ol")[0],assertLi=document.createElement("li"),assertLi.className=details.result?"pass":"fail",assertLi.innerHTML=message,assertList.appendChild(assertLi))});QUnit.testDone(function(details){var testTitle,time,testItem,assertList,good,bad,testCounts,skipped,sourceName,tests=id("qunit-tests");tests&&(testItem=id("qunit-test-output-"+details.testId),assertList=testItem.getElementsByTagName("ol")[0],good=details.passed,bad=details.failed,config.reorder&&defined.sessionStorage&&(bad?sessionStorage.setItem("qunit-test-"+details.module+"-"+details.name,bad):sessionStorage.removeItem("qunit-test-"+details.module+"-"+details.name)),bad===0?addClass(assertList,"qunit-collapsed"):bad&&config.collapse&&!collapseNext?collapseNext=!0:addClass(assertList,"qunit-collapsed"),testTitle=testItem.firstChild,testCounts=bad?"<b class='failed'>"+bad+"<\/b>, <b class='passed'>"+good+"<\/b>, ":"",testTitle.innerHTML+=" <b class='counts'>("+testCounts+details.assertions.length+")<\/b>",details.skipped?(testItem.className="skipped",skipped=document.createElement("em"),skipped.className="qunit-skipped-label",skipped.innerHTML="skipped",testItem.insertBefore(skipped,testTitle)):(addEvent(testTitle,"click",function(){toggleClass(assertList,"qunit-collapsed")}),testItem.className=bad?"fail":"pass",time=document.createElement("span"),time.className="runtime",time.innerHTML=details.runtime+" ms",testItem.insertBefore(time,assertList)),details.source&&(sourceName=document.createElement("p"),sourceName.innerHTML="<strong>Source: <\/strong>"+details.source,addClass(sourceName,"qunit-source"),bad===0&&addClass(sourceName,"qunit-collapsed"),addEvent(testTitle,"click",function(){toggleClass(sourceName,"qunit-collapsed")}),testItem.appendChild(sourceName)))});notPhantom=function(p){return!(p&&p.version&&p.version.major>0)}(window.phantom);notPhantom&&document.readyState==="complete"?QUnit.load():addEvent(window,"load",QUnit.load);QUnit.diff=function(){function DiffMatchPatch(){}var DIFF_DELETE=-1,DIFF_INSERT=1,DIFF_EQUAL=0;return DiffMatchPatch.prototype.DiffMain=function(text1,text2,optChecklines){var deadline,checklines,commonlength,commonprefix,commonsuffix,diffs;if(deadline=(new Date).getTime()+1e3,text1===null||text2===null)throw new Error("Null input. (DiffMain)");return text1===text2?text1?[[DIFF_EQUAL,text1]]:[]:(typeof optChecklines=="undefined"&&(optChecklines=!0),checklines=optChecklines,commonlength=this.diffCommonPrefix(text1,text2),commonprefix=text1.substring(0,commonlength),text1=text1.substring(commonlength),text2=text2.substring(commonlength),commonlength=this.diffCommonSuffix(text1,text2),commonsuffix=text1.substring(text1.length-commonlength),text1=text1.substring(0,text1.length-commonlength),text2=text2.substring(0,text2.length-commonlength),diffs=this.diffCompute(text1,text2,checklines,deadline),commonprefix&&diffs.unshift([DIFF_EQUAL,commonprefix]),commonsuffix&&diffs.push([DIFF_EQUAL,commonsuffix]),this.diffCleanupMerge(diffs),diffs)},DiffMatchPatch.prototype.diffCleanupEfficiency=function(diffs){var changes,equalities,equalitiesLength,lastequality,pointer,preIns,preDel,postIns,postDel;for(changes=!1,equalities=[],equalitiesLength=0,lastequality=null,pointer=0,preIns=!1,preDel=!1,postIns=!1,postDel=!1;pointer<diffs.length;)diffs[pointer][0]===DIFF_EQUAL?(diffs[pointer][1].length<4&&(postIns||postDel)?(equalities[equalitiesLength++]=pointer,preIns=postIns,preDel=postDel,lastequality=diffs[pointer][1]):(equalitiesLength=0,lastequality=null),postIns=postDel=!1):(diffs[pointer][0]===DIFF_DELETE?postDel=!0:postIns=!0,lastequality&&(preIns&&preDel&&postIns&&postDel||lastequality.length<2&&preIns+preDel+postIns+postDel===3)&&(diffs.splice(equalities[equalitiesLength-1],0,[DIFF_DELETE,lastequality]),diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT,equalitiesLength--,lastequality=null,preIns&&preDel?(postIns=postDel=!0,equalitiesLength=0):(equalitiesLength--,pointer=equalitiesLength>0?equalities[equalitiesLength-1]:-1,postIns=postDel=!1),changes=!0)),pointer++;changes&&this.diffCleanupMerge(diffs)},DiffMatchPatch.prototype.diffPrettyHtml=function(diffs){for(var op,data,html=[],x=0;x<diffs.length;x++){op=diffs[x][0];data=diffs[x][1];switch(op){case DIFF_INSERT:html[x]="<ins>"+escapeText(data)+"<\/ins>";break;case DIFF_DELETE:html[x]="<del>"+escapeText(data)+"<\/del>";break;case DIFF_EQUAL:html[x]="<span>"+escapeText(data)+"<\/span>"}}return html.join("")},DiffMatchPatch.prototype.diffCommonPrefix=function(text1,text2){var pointermid,pointermax,pointermin,pointerstart;if(!text1||!text2||text1.charAt(0)!==text2.charAt(0))return 0;for(pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerstart=0;pointermin<pointermid;)text1.substring(pointerstart,pointermid)===text2.substring(pointerstart,pointermid)?(pointermin=pointermid,pointerstart=pointermin):pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},DiffMatchPatch.prototype.diffCommonSuffix=function(text1,text2){var pointermid,pointermax,pointermin,pointerend;if(!text1||!text2||text1.charAt(text1.length-1)!==text2.charAt(text2.length-1))return 0;for(pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerend=0;pointermin<pointermid;)text1.substring(text1.length-pointermid,text1.length-pointerend)===text2.substring(text2.length-pointermid,text2.length-pointerend)?(pointermin=pointermid,pointerend=pointermin):pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},DiffMatchPatch.prototype.diffCompute=function(text1,text2,checklines,deadline){var diffs,longtext,shorttext,i,hm,text1A,text2A,text1B,text2B,midCommon,diffsA,diffsB;return text1?text2?(longtext=text1.length>text2.length?text1:text2,shorttext=text1.length>text2.length?text2:text1,i=longtext.indexOf(shorttext),i!==-1)?(diffs=[[DIFF_INSERT,longtext.substring(0,i)],[DIFF_EQUAL,shorttext],[DIFF_INSERT,longtext.substring(i+shorttext.length)]],text1.length>text2.length&&(diffs[0][0]=diffs[2][0]=DIFF_DELETE),diffs):shorttext.length===1?[[DIFF_DELETE,text1],[DIFF_INSERT,text2]]:(hm=this.diffHalfMatch(text1,text2),hm)?(text1A=hm[0],text1B=hm[1],text2A=hm[2],text2B=hm[3],midCommon=hm[4],diffsA=this.DiffMain(text1A,text2A,checklines,deadline),diffsB=this.DiffMain(text1B,text2B,checklines,deadline),diffsA.concat([[DIFF_EQUAL,midCommon]],diffsB)):checklines&&text1.length>100&&text2.length>100?this.diffLineMode(text1,text2,deadline):this.diffBisect(text1,text2,deadline):[[DIFF_DELETE,text1]]:[[DIFF_INSERT,text2]]},DiffMatchPatch.prototype.diffHalfMatch=function(text1,text2){function diffHalfMatchI(longtext,shorttext,i){var seed,j,bestCommon,prefixLength,suffixLength,bestLongtextA,bestLongtextB,bestShorttextA,bestShorttextB;for(seed=longtext.substring(i,i+Math.floor(longtext.length/4)),j=-1,bestCommon="";(j=shorttext.indexOf(seed,j+1))!==-1;)prefixLength=dmp.diffCommonPrefix(longtext.substring(i),shorttext.substring(j)),suffixLength=dmp.diffCommonSuffix(longtext.substring(0,i),shorttext.substring(0,j)),bestCommon.length<suffixLength+prefixLength&&(bestCommon=shorttext.substring(j-suffixLength,j)+shorttext.substring(j,j+prefixLength),bestLongtextA=longtext.substring(0,i-suffixLength),bestLongtextB=longtext.substring(i+prefixLength),bestShorttextA=shorttext.substring(0,j-suffixLength),bestShorttextB=shorttext.substring(j+prefixLength));return bestCommon.length*2>=longtext.length?[bestLongtextA,bestLongtextB,bestShorttextA,bestShorttextB,bestCommon]:null}var longtext,shorttext,dmp,text1A,text2B,text2A,text1B,midCommon,hm1,hm2,hm;if(longtext=text1.length>text2.length?text1:text2,shorttext=text1.length>text2.length?text2:text1,longtext.length<4||shorttext.length*2<longtext.length)return null;if(dmp=this,hm1=diffHalfMatchI(longtext,shorttext,Math.ceil(longtext.length/4)),hm2=diffHalfMatchI(longtext,shorttext,Math.ceil(longtext.length/2)),hm1||hm2)hm=hm2?hm1?hm1[4].length>hm2[4].length?hm1:hm2:hm2:hm1;else return null;return text1A,text1B,text2A,text2B,text1.length>text2.length?(text1A=hm[0],text1B=hm[1],text2A=hm[2],text2B=hm[3]):(text2A=hm[0],text2B=hm[1],text1A=hm[2],text1B=hm[3]),midCommon=hm[4],[text1A,text1B,text2A,text2B,midCommon]},DiffMatchPatch.prototype.diffLineMode=function(text1,text2,deadline){var a,diffs,linearray,pointer,countInsert,countDelete,textInsert,textDelete,j;for(a=this.diffLinesToChars(text1,text2),text1=a.chars1,text2=a.chars2,linearray=a.lineArray,diffs=this.DiffMain(text1,text2,!1,deadline),this.diffCharsToLines(diffs,linearray),this.diffCleanupSemantic(diffs),diffs.push([DIFF_EQUAL,""]),pointer=0,countDelete=0,countInsert=0,textDelete="",textInsert="";pointer<diffs.length;){switch(diffs[pointer][0]){case DIFF_INSERT:countInsert++;textInsert+=diffs[pointer][1];break;case DIFF_DELETE:countDelete++;textDelete+=diffs[pointer][1];break;case DIFF_EQUAL:if(countDelete>=1&&countInsert>=1){for(diffs.splice(pointer-countDelete-countInsert,countDelete+countInsert),pointer=pointer-countDelete-countInsert,a=this.DiffMain(textDelete,textInsert,!1,deadline),j=a.length-1;j>=0;j--)diffs.splice(pointer,0,a[j]);pointer=pointer+a.length}countInsert=0;countDelete=0;textDelete="";textInsert=""}pointer++}return diffs.pop(),diffs},DiffMatchPatch.prototype.diffBisect=function(text1,text2,deadline){var text1Length,text2Length,maxD,vOffset,vLength,v1,v2,x,delta,front,k1start,k1end,k2start,k2end,k2Offset,k1Offset,x1,x2,y1,y2,d,k1,k2;for(text1Length=text1.length,text2Length=text2.length,maxD=Math.ceil((text1Length+text2Length)/2),vOffset=maxD,vLength=2*maxD,v1=new Array(vLength),v2=new Array(vLength),x=0;x<vLength;x++)v1[x]=-1,v2[x]=-1;for(v1[vOffset+1]=0,v2[vOffset+1]=0,delta=text1Length-text2Length,front=delta%2!=0,k1start=0,k1end=0,k2start=0,k2end=0,d=0;d<maxD;d++){if((new Date).getTime()>deadline)break;for(k1=-d+k1start;k1<=d-k1end;k1+=2){for(k1Offset=vOffset+k1,x1=k1===-d||k1!==d&&v1[k1Offset-1]<v1[k1Offset+1]?v1[k1Offset+1]:v1[k1Offset-1]+1,y1=x1-k1;x1<text1Length&&y1<text2Length&&text1.charAt(x1)===text2.charAt(y1);)x1++,y1++;if(v1[k1Offset]=x1,x1>text1Length)k1end+=2;else if(y1>text2Length)k1start+=2;else if(front&&(k2Offset=vOffset+delta-k1,k2Offset>=0&&k2Offset<vLength&&v2[k2Offset]!==-1&&(x2=text1Length-v2[k2Offset],x1>=x2)))return this.diffBisectSplit(text1,text2,x1,y1,deadline)}for(k2=-d+k2start;k2<=d-k2end;k2+=2){for(k2Offset=vOffset+k2,x2=k2===-d||k2!==d&&v2[k2Offset-1]<v2[k2Offset+1]?v2[k2Offset+1]:v2[k2Offset-1]+1,y2=x2-k2;x2<text1Length&&y2<text2Length&&text1.charAt(text1Length-x2-1)===text2.charAt(text2Length-y2-1);)x2++,y2++;if(v2[k2Offset]=x2,x2>text1Length)k2end+=2;else if(y2>text2Length)k2start+=2;else if(!front&&(k1Offset=vOffset+delta-k2,k1Offset>=0&&k1Offset<vLength&&v1[k1Offset]!==-1&&(x1=v1[k1Offset],y1=vOffset+x1-k1Offset,x2=text1Length-x2,x1>=x2)))return this.diffBisectSplit(text1,text2,x1,y1,deadline)}}return[[DIFF_DELETE,text1],[DIFF_INSERT,text2]]},DiffMatchPatch.prototype.diffBisectSplit=function(text1,text2,x,y,deadline){var text1a,text1b,text2a,text2b,diffs,diffsb;return text1a=text1.substring(0,x),text2a=text2.substring(0,y),text1b=text1.substring(x),text2b=text2.substring(y),diffs=this.DiffMain(text1a,text2a,!1,deadline),diffsb=this.DiffMain(text1b,text2b,!1,deadline),diffs.concat(diffsb)},DiffMatchPatch.prototype.diffCleanupSemantic=function(diffs){var changes,equalities,equalitiesLength,lastequality,pointer,lengthInsertions2,lengthDeletions2,lengthInsertions1,lengthDeletions1,deletion,insertion,overlapLength1,overlapLength2;for(changes=!1,equalities=[],equalitiesLength=0,lastequality=null,pointer=0,lengthInsertions1=0,lengthDeletions1=0,lengthInsertions2=0,lengthDeletions2=0;pointer<diffs.length;)diffs[pointer][0]===DIFF_EQUAL?(equalities[equalitiesLength++]=pointer,lengthInsertions1=lengthInsertions2,lengthDeletions1=lengthDeletions2,lengthInsertions2=0,lengthDeletions2=0,lastequality=diffs[pointer][1]):(diffs[pointer][0]===DIFF_INSERT?lengthInsertions2+=diffs[pointer][1].length:lengthDeletions2+=diffs[pointer][1].length,lastequality&&lastequality.length<=Math.max(lengthInsertions1,lengthDeletions1)&&lastequality.length<=Math.max(lengthInsertions2,lengthDeletions2)&&(diffs.splice(equalities[equalitiesLength-1],0,[DIFF_DELETE,lastequality]),diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT,equalitiesLength--,equalitiesLength--,pointer=equalitiesLength>0?equalities[equalitiesLength-1]:-1,lengthInsertions1=0,lengthDeletions1=0,lengthInsertions2=0,lengthDeletions2=0,lastequality=null,changes=!0)),pointer++;for(changes&&this.diffCleanupMerge(diffs),pointer=1;pointer<diffs.length;)diffs[pointer-1][0]===DIFF_DELETE&&diffs[pointer][0]===DIFF_INSERT&&(deletion=diffs[pointer-1][1],insertion=diffs[pointer][1],overlapLength1=this.diffCommonOverlap(deletion,insertion),overlapLength2=this.diffCommonOverlap(insertion,deletion),overlapLength1>=overlapLength2?(overlapLength1>=deletion.length/2||overlapLength1>=insertion.length/2)&&(diffs.splice(pointer,0,[DIFF_EQUAL,insertion.substring(0,overlapLength1)]),diffs[pointer-1][1]=deletion.substring(0,deletion.length-overlapLength1),diffs[pointer+1][1]=insertion.substring(overlapLength1),pointer++):(overlapLength2>=deletion.length/2||overlapLength2>=insertion.length/2)&&(diffs.splice(pointer,0,[DIFF_EQUAL,deletion.substring(0,overlapLength2)]),diffs[pointer-1][0]=DIFF_INSERT,diffs[pointer-1][1]=insertion.substring(0,insertion.length-overlapLength2),diffs[pointer+1][0]=DIFF_DELETE,diffs[pointer+1][1]=deletion.substring(overlapLength2),pointer++),pointer++),pointer++},DiffMatchPatch.prototype.diffCommonOverlap=function(text1,text2){var text1Length,text2Length,textLength,best,length,pattern,found;if(text1Length=text1.length,text2Length=text2.length,text1Length===0||text2Length===0)return 0;if(text1Length>text2Length?text1=text1.substring(text1Length-text2Length):text1Length<text2Length&&(text2=text2.substring(0,text1Length)),textLength=Math.min(text1Length,text2Length),text1===text2)return textLength;for(best=0,length=1;;){if(pattern=text1.substring(textLength-length),found=text2.indexOf(pattern),found===-1)return best;length+=found;(found===0||text1.substring(textLength-length)===text2.substring(0,length))&&(best=length,length++)}},DiffMatchPatch.prototype.diffLinesToChars=function(text1,text2){function diffLinesToCharsMunge(text){var chars,lineStart,lineEnd,lineArrayLength,line;for(chars="",lineStart=0,lineEnd=-1,lineArrayLength=lineArray.length;lineEnd<text.length-1;)lineEnd=text.indexOf("\n",lineStart),lineEnd===-1&&(lineEnd=text.length-1),line=text.substring(lineStart,lineEnd+1),lineStart=lineEnd+1,(lineHash.hasOwnProperty?lineHash.hasOwnProperty(line):lineHash[line]!==undefined)?chars+=String.fromCharCode(lineHash[line]):(chars+=String.fromCharCode(lineArrayLength),lineHash[line]=lineArrayLength,lineArray[lineArrayLength++]=line);return chars}var lineArray,lineHash,chars1,chars2;return lineArray=[],lineHash={},lineArray[0]="",chars1=diffLinesToCharsMunge(text1),chars2=diffLinesToCharsMunge(text2),{chars1:chars1,chars2:chars2,lineArray:lineArray}},DiffMatchPatch.prototype.diffCharsToLines=function(diffs,lineArray){for(var chars,text,y,x=0;x<diffs.length;x++){for(chars=diffs[x][1],text=[],y=0;y<chars.length;y++)text[y]=lineArray[chars.charCodeAt(y)];diffs[x][1]=text.join("")}},DiffMatchPatch.prototype.diffCleanupMerge=function(diffs){var pointer,countDelete,countInsert,textInsert,textDelete,commonlength,changes,diffPointer,position;for(diffs.push([DIFF_EQUAL,""]),pointer=0,countDelete=0,countInsert=0,textDelete="",textInsert="",commonlength;pointer<diffs.length;)switch(diffs[pointer][0]){case DIFF_INSERT:countInsert++;textInsert+=diffs[pointer][1];pointer++;break;case DIFF_DELETE:countDelete++;textDelete+=diffs[pointer][1];pointer++;break;case DIFF_EQUAL:countDelete+countInsert>1?(countDelete!==0&&countInsert!==0&&(commonlength=this.diffCommonPrefix(textInsert,textDelete),commonlength!==0&&(pointer-countDelete-countInsert>0&&diffs[pointer-countDelete-countInsert-1][0]===DIFF_EQUAL?diffs[pointer-countDelete-countInsert-1][1]+=textInsert.substring(0,commonlength):(diffs.splice(0,0,[DIFF_EQUAL,textInsert.substring(0,commonlength)]),pointer++),textInsert=textInsert.substring(commonlength),textDelete=textDelete.substring(commonlength)),commonlength=this.diffCommonSuffix(textInsert,textDelete),commonlength!==0&&(diffs[pointer][1]=textInsert.substring(textInsert.length-commonlength)+diffs[pointer][1],textInsert=textInsert.substring(0,textInsert.length-commonlength),textDelete=textDelete.substring(0,textDelete.length-commonlength))),countDelete===0?diffs.splice(pointer-countInsert,countDelete+countInsert,[DIFF_INSERT,textInsert]):countInsert===0?diffs.splice(pointer-countDelete,countDelete+countInsert,[DIFF_DELETE,textDelete]):diffs.splice(pointer-countDelete-countInsert,countDelete+countInsert,[DIFF_DELETE,textDelete],[DIFF_INSERT,textInsert]),pointer=pointer-countDelete-countInsert+(countDelete?1:0)+(countInsert?1:0)+1):pointer!==0&&diffs[pointer-1][0]===DIFF_EQUAL?(diffs[pointer-1][1]+=diffs[pointer][1],diffs.splice(pointer,1)):pointer++;countInsert=0;countDelete=0;textDelete="";textInsert=""}for(diffs[diffs.length-1][1]===""&&diffs.pop(),changes=!1,pointer=1;pointer<diffs.length-1;)diffs[pointer-1][0]===DIFF_EQUAL&&diffs[pointer+1][0]===DIFF_EQUAL&&(diffPointer=diffs[pointer][1],position=diffPointer.substring(diffPointer.length-diffs[pointer-1][1].length),position===diffs[pointer-1][1]?(diffs[pointer][1]=diffs[pointer-1][1]+diffs[pointer][1].substring(0,diffs[pointer][1].length-diffs[pointer-1][1].length),diffs[pointer+1][1]=diffs[pointer-1][1]+diffs[pointer+1][1],diffs.splice(pointer-1,1),changes=!0):diffPointer.substring(0,diffs[pointer+1][1].length)===diffs[pointer+1][1]&&(diffs[pointer-1][1]+=diffs[pointer+1][1],diffs[pointer][1]=diffs[pointer][1].substring(diffs[pointer+1][1].length)+diffs[pointer+1][1],diffs.splice(pointer+1,1),changes=!0)),pointer++;changes&&this.diffCleanupMerge(diffs)},function(o,n){var diff,output;return diff=new DiffMatchPatch,output=diff.DiffMain(o,n),diff.diffCleanupEfficiency(output),diff.diffPrettyHtml(output)}}()}}();